<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">


	<bean id="ds" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="username" value="${jdbc.username}"></property>
		<property name="password" value="${jdbc.password}"></property>
		<property name="driverClassName" value="${jdbc.driver}"></property>
		<property name="url" value="${jdbc.url}"></property>
	</bean>
	
	<!-- 
	Here we can comment out this bean and instead use @Repository("beanName") or @Component("beanName") annotations in 
	OrgDAOImpl class and @Autowired before the setDataSource() setter in order to inject the 
	proper bean to it(ds bean) - Setter based Autowiring
	<bean id="orgDao"
		class="com.owary.springjdbc.daoimpl.OrganizationDAOImpl">
		<property name="dataSource" ref="ds"></property>
	</bean>
	-->
	
	<!-- property-placeholder is here in order to make using '.properties file' available -->
	<context:property-placeholder location="organization.properties" />
	
	<!-- Component Scan is here to search through the indicated package and find annotations -->
	<context:component-scan base-package="com.owary.springjdbc"></context:component-scan>
</beans>
